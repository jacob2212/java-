import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
class CurrencyConverter {
 private final Map<String, Double> exchangeRates;
 public CurrencyConverter() {
 this.exchangeRates = new HashMap<>();
 // Initialize exchange rates
 exchangeRates.put("USD", 1.0);
 exchangeRates.put("EUR", 0.85);
 exchangeRates.put("GBP", 0.73);
 exchangeRates.put("JPY", 111.38);
 exchangeRates.put("MXN", 20.32);
 exchangeRates.put("CNY", 6.38);
 // Add more rates as needed
 }
 public double convert(double amount, String fromCurrency, String 
toCurrency) {
 double fromRate = exchangeRates.get(fromCurrency);
 double toRate = exchangeRates.get(toCurrency);
 return (amount / fromRate) * toRate;
 }
 public void displayAvailableCurrencies() {
 System.out.println("\nAvailable currencies:");
 for (String currency : exchangeRates.keySet()) {
 System.out.print(currency + " ");
 }
 System.out.println();
 }
 public void updateExchangeRates() {
 // Implement the logic to update exchange rates using the provided 
API
 // This part is currently missing in the code
 // You can use the accessKey and make API requests to update 
exchange rates
 }
 // Method to perform currency conversion
 public void performCurrencyConversion(Scanner scanner) {
 System.out.print("Enter the base currency code (e.g., USD): ");
 String baseCurrency = scanner.nextLine().toUpperCase();
 if (!exchangeRates.containsKey(baseCurrency)) {
 System.out.println("Invalid currency code.");
 return;
 }
 System.out.print("Enter the value in " + baseCurrency + " to 
convert: ");
 double userValue;
 try {
 userValue = Double.parseDouble(scanner.nextLine());
 } catch (NumberFormatException e) {
 System.out.println("Invalid input. Exiting...");
 return;
 }
 System.out.println("\nComparing other currencies to " + userValue +
" " + baseCurrency + ":");
 for (String currencyCode : exchangeRates.keySet()) {
 if (!currencyCode.equals(baseCurrency)) {
 double convertedAmount = convert(userValue, baseCurrency, 
currencyCode);
 System.out.println(currencyCode + " " + convertedAmount);
 }
 }
 }
}
public class Main {
 public static void main(String[] args) {
 CurrencyConverter converter = new CurrencyConverter();
 Scanner scanner = new Scanner(System.in);
 boolean running = true;
 while (running) {
 System.out.println("\n=== Currency Converter Menu ===");
 System.out.println("1. Update Exchange Rates");
 System.out.println("2. Display Available Currencies");
 System.out.println("3. Perform Currency Conversion");
 System.out.println("4. Exit");
 System.out.print("Enter your choice (1-4): ");
 int choice;
 try {
 choice = Integer.parseInt(scanner.nextLine());
 } catch (NumberFormatException e) {
 System.out.println("Invalid input. Please enter a 
number.");
 continue;
 }
 switch (choice) {
 case 1 -> {
 System.out.print("Enter your access key: ");
 String accessKey = scanner.nextLine();
 converter.updateExchangeRates();
 }
 case 2 -> converter.displayAvailableCurrencies();
 case 3 -> converter.performCurrencyConversion(scanner);
 case 4 -> running = false;
 default -> System.out.println("Invalid choice. Please enter
a number between 1 and 4.");
 }
 }
 System.out.println("Exiting the Currency Converter. Goodbye!");
 scanner.close();
 }
